<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="Neuron"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="HiddenLayer">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="HiddenLayer"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(180,270)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="WEIGHTS1"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(180,270)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="1"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="2"/>
      <a name="bit17" val="2"/>
      <a name="bit18" val="2"/>
      <a name="bit19" val="2"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="2"/>
      <a name="bit21" val="2"/>
      <a name="bit22" val="2"/>
      <a name="bit23" val="2"/>
      <a name="bit24" val="3"/>
      <a name="bit25" val="3"/>
      <a name="bit26" val="3"/>
      <a name="bit27" val="3"/>
      <a name="bit28" val="3"/>
      <a name="bit29" val="3"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="3"/>
      <a name="bit31" val="3"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="1"/>
      <a name="bit9" val="1"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(180,490)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="WEIGHTS2"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(180,710)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="WEIGHTS3"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(210,490)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="1"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="2"/>
      <a name="bit17" val="2"/>
      <a name="bit18" val="2"/>
      <a name="bit19" val="2"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="2"/>
      <a name="bit21" val="2"/>
      <a name="bit22" val="2"/>
      <a name="bit23" val="2"/>
      <a name="bit24" val="3"/>
      <a name="bit25" val="3"/>
      <a name="bit26" val="3"/>
      <a name="bit27" val="3"/>
      <a name="bit28" val="3"/>
      <a name="bit29" val="3"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="3"/>
      <a name="bit31" val="3"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="1"/>
      <a name="bit9" val="1"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(210,710)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="1"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="2"/>
      <a name="bit17" val="2"/>
      <a name="bit18" val="2"/>
      <a name="bit19" val="2"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="2"/>
      <a name="bit21" val="2"/>
      <a name="bit22" val="2"/>
      <a name="bit23" val="2"/>
      <a name="bit24" val="3"/>
      <a name="bit25" val="3"/>
      <a name="bit26" val="3"/>
      <a name="bit27" val="3"/>
      <a name="bit28" val="3"/>
      <a name="bit29" val="3"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="3"/>
      <a name="bit31" val="3"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="1"/>
      <a name="bit9" val="1"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp loc="(480,130)" name="Neuron"/>
    <comp loc="(480,350)" name="Neuron"/>
    <comp loc="(480,570)" name="Neuron"/>
    <wire from="(180,490)" to="(210,490)"/>
    <wire from="(180,710)" to="(210,710)"/>
    <wire from="(200,230)" to="(260,230)"/>
    <wire from="(200,240)" to="(260,240)"/>
    <wire from="(200,250)" to="(250,250)"/>
    <wire from="(200,260)" to="(240,260)"/>
    <wire from="(230,450)" to="(260,450)"/>
    <wire from="(230,460)" to="(260,460)"/>
    <wire from="(230,470)" to="(250,470)"/>
    <wire from="(230,480)" to="(240,480)"/>
    <wire from="(230,670)" to="(260,670)"/>
    <wire from="(230,680)" to="(260,680)"/>
    <wire from="(230,690)" to="(250,690)"/>
    <wire from="(230,700)" to="(230,730)"/>
    <wire from="(230,730)" to="(260,730)"/>
    <wire from="(240,260)" to="(240,290)"/>
    <wire from="(240,290)" to="(260,290)"/>
    <wire from="(240,480)" to="(240,510)"/>
    <wire from="(240,510)" to="(260,510)"/>
    <wire from="(250,250)" to="(250,270)"/>
    <wire from="(250,270)" to="(260,270)"/>
    <wire from="(250,470)" to="(250,490)"/>
    <wire from="(250,490)" to="(260,490)"/>
    <wire from="(250,690)" to="(250,710)"/>
    <wire from="(250,710)" to="(260,710)"/>
    <wire from="(260,240)" to="(260,250)"/>
    <wire from="(260,450)" to="(280,450)"/>
    <wire from="(260,460)" to="(260,470)"/>
    <wire from="(260,670)" to="(270,670)"/>
    <wire from="(260,680)" to="(260,690)"/>
    <wire from="(260,730)" to="(270,730)"/>
  </circuit>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
  </circuit>
  <circuit name="Neuron">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Neuron"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(110,160)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="RESET"/>
    </comp>
    <comp lib="0" loc="(120,650)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="ENABLE"/>
    </comp>
    <comp lib="0" loc="(410,590)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="WEIGHT4"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(420,560)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="WEIGHT3"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(430,310)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="INPUT4"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(430,530)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="WEIGHT2"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(440,280)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="INPUT3"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(440,500)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="WEIGHT1"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(450,250)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="INPUT2"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(460,220)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="INPUT1"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(760,350)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="NeuronOUT"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="2" loc="(510,320)" name="Multiplexer">
      <a name="select" val="2"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="2" loc="(560,370)" name="Multiplexer">
      <a name="select" val="2"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="3" loc="(660,350)" name="Multiplier"/>
    <comp lib="4" loc="(200,320)" name="Counter">
      <a name="appearance" val="logisim_evolution"/>
      <a name="max" val="0x3"/>
      <a name="width" val="2"/>
    </comp>
    <comp lib="4" loc="(680,320)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(110,160)" to="(140,160)"/>
    <wire from="(120,370)" to="(120,650)"/>
    <wire from="(120,370)" to="(200,370)"/>
    <wire from="(120,650)" to="(680,650)"/>
    <wire from="(140,160)" to="(140,340)"/>
    <wire from="(140,160)" to="(670,160)"/>
    <wire from="(140,340)" to="(200,340)"/>
    <wire from="(200,340)" to="(210,340)"/>
    <wire from="(200,370)" to="(210,370)"/>
    <wire from="(380,430)" to="(490,430)"/>
    <wire from="(410,590)" to="(480,590)"/>
    <wire from="(420,560)" to="(470,560)"/>
    <wire from="(430,310)" to="(440,310)"/>
    <wire from="(430,530)" to="(460,530)"/>
    <wire from="(440,280)" to="(450,280)"/>
    <wire from="(440,310)" to="(440,330)"/>
    <wire from="(440,330)" to="(470,330)"/>
    <wire from="(440,500)" to="(450,500)"/>
    <wire from="(450,250)" to="(460,250)"/>
    <wire from="(450,280)" to="(450,320)"/>
    <wire from="(450,320)" to="(470,320)"/>
    <wire from="(450,350)" to="(450,500)"/>
    <wire from="(450,350)" to="(520,350)"/>
    <wire from="(460,220)" to="(470,220)"/>
    <wire from="(460,250)" to="(460,310)"/>
    <wire from="(460,310)" to="(470,310)"/>
    <wire from="(460,360)" to="(460,530)"/>
    <wire from="(460,360)" to="(520,360)"/>
    <wire from="(470,220)" to="(470,300)"/>
    <wire from="(470,370)" to="(470,560)"/>
    <wire from="(470,370)" to="(520,370)"/>
    <wire from="(480,380)" to="(480,590)"/>
    <wire from="(480,380)" to="(520,380)"/>
    <wire from="(490,340)" to="(490,430)"/>
    <wire from="(490,430)" to="(540,430)"/>
    <wire from="(510,320)" to="(610,320)"/>
    <wire from="(540,390)" to="(540,430)"/>
    <wire from="(560,370)" to="(600,370)"/>
    <wire from="(600,360)" to="(600,370)"/>
    <wire from="(600,360)" to="(620,360)"/>
    <wire from="(610,320)" to="(610,340)"/>
    <wire from="(610,340)" to="(620,340)"/>
    <wire from="(660,350)" to="(680,350)"/>
    <wire from="(670,160)" to="(670,390)"/>
    <wire from="(670,390)" to="(680,390)"/>
    <wire from="(680,350)" to="(690,350)"/>
    <wire from="(680,370)" to="(680,390)"/>
    <wire from="(680,390)" to="(680,650)"/>
    <wire from="(740,350)" to="(760,350)"/>
  </circuit>
  <vhdl name="Sigmoid_Activation_Function">--------------------------------------------------------------------------------&#13;
-- Project :&#13; FPGA-NN
-- File    :&#13; 
-- Autor   :&#13;
-- Date    :&#13; 
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description : This is a sigmoid function that takes an 8-bit input vector and outputs an 8-bit result vector.
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY Sigmoid_Activation_Function IS&#13;
  PORT (&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    clock      : IN  std_logic;                    -- input bit example&#13;
    x        	: IN  std_logic_vector(7 DOWNTO 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max        : OUT std_logic;                    -- output bit example&#13;
    y        	: OUT std_logic_vector(7 DOWNTO 0)  -- output vector example&#13;
    );&#13;
END Sigmoid_Activation_Function;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
-- VHDL Description
--------------------------------------------------------------------------------&#13;
&#13;
-- Sigmoid function output formula: y = 1 / (1 + e^-x)

ARCHITECTURE Behavioural OF Sigmoid_Activation_Function IS&#13;
&#13;
-- creates a 16-bit wide intermediate signal to aid calculatons
signal temp : std_logic_vector(15 downto 0);

BEGIN&#13;
&#13;
-- takes the negation of our input, and pads it with zeroes to make it 16 bits wide to be saved to the intermediate signal "temp"
temp &lt;= NOT x + "0000000000000001";

-- takes the square negation of our input to save to output "y".
y &lt;= std_logic_vector(unsigned(temp)*unsigned(temp));

END Behavioral;&#13;
</vhdl>
</project>
